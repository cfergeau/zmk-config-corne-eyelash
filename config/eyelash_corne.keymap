#include <dt-bindings/zmk/mouse.h>
#include <input/processors.dtsi>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

/*

   &mmv_input_listener {
       input-processors = <&zip_xy_scaler 2 1>;
   };

   &msc_input_listener {
       input-processors = <&zip_xy_scaler 2 1>;
   };

 */

#define ZMK_MOUSE_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_MOUSE_DEFAULT_SCRL_VAL 20    // 10

/ {
    behaviors {
        td0: td0 {
            compatible = "zmk,behavior-tap-dance";
            display-name = "Shift/Caps Lock Tap Dance";
            #binding-cells = <0>;
            bindings = <&kp LEFT_SHIFT>, <&kp CAPS>;
        };

        hm: homerow_mod {
            compatible = "zmk,behavior-hold-tap";
            label = "Home row mod";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <200>;
            require-prior-idle-ms = <125>;
            flavor = "tap-preferred";
        };
    };

    rgb_encoder: rgb_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&rgb_ug RGB_BRI>, <&rgb_ug RGB_BRD>;
    };

    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <30>;
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "QWERTY";
            bindings = <
&kp TAB     &kp Q           &kp W           &kp E             &kp R        &kp T                                 &kp UP                &kp Y  &kp U               &kp I              &kp O           &kp P               &kp BSPC
&kp ESCAPE  &hm LEFT_GUI A  &hm LEFT_ALT S  &hm LEFT_SHIFT D  &hm LCTRL F  &kp G                       &kp LEFT  &kp ENTER  &kp RIGHT  &kp H  &hm LEFT_CONTROL J  &hm RIGHT_SHIFT K  &hm LEFT_ALT L  &hm RIGHT_GUI SEMI  &kp SQT
&kp LCTRL   &kp Z           &kp X           &kp C             &kp V        &kp B          &kp SPACE              &kp DOWN              &kp N  &kp M               &kp COMMA          &kp DOT         &kp FSLH            &kp ENTER
                                            &mo 2             &lt 1 SPACE  &kp BACKSPACE                                               &mo 2  &lt 1 ENTER         &kp RALT
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };

        navim {
            bindings = <
&kp GRAVE     &kp PLUS   &kp N7  &kp N8  &kp N9  &kp DOT                      &trans          &trans    &trans         &trans     &trans     &trans      &trans
&kp ASTERISK  &kp MINUS  &kp N4  &kp N5  &kp N6  &kp N0               &trans  &trans  &trans  &kp LEFT  &kp DOWN       &kp UP     &kp RIGHT  &kp BSPC    &trans
&kp SLASH     &kp EQUAL  &kp N1  &kp N2  &kp N3  &kp COMMA  &trans            &trans          &kp HOME  &kp PAGE_DOWN  &kp PG_UP  &kp END    &kp DELETE  &trans
                                 &trans  &trans  &trans                                       &trans    &trans         &trans
            >;
        };

        num {
            bindings = <
&trans  &kp LS(N1)    &kp LS(N2)    &kp LS(N3)  &kp LS(N4)  &kp LS(N5)                    &kp BSPC          &kp LS(N6)  &kp LS(N7)  &kp LS(N8)  &kp LS(N9)  &kp LS(N0)  &trans
&trans  &kp NUMBER_1  &kp NUMBER_2  &kp N3      &kp N4      &kp N5                &trans  &trans    &trans  &kp N6      &kp N7      &kp N8      &kp N9      &kp N0      &trans
&kp F1  &kp F2        &kp F3        &kp F4      &kp F5      &kp F6      &trans            &trans            &kp F7      &kp F8      &kp F9      &kp F10     &kp F11     &kp F12
                                    &trans      &trans      &trans                                          &trans      &trans      &trans
            >;
        };

        adjust {
            display-name = "ADJUST";
            bindings = <
&sys_reset      &trans           &trans          &trans        &out OUT_BLE  &out OUT_USB                                   &mmv MOVE_UP                     &trans           &trans           &trans           &trans           &trans  &trans
&bt BT_CLR      &trans           &bt BT_SEL 0    &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3                   &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &trans           &trans           &trans           &trans           &trans  &trans
&studio_unlock  &rgb_ug RGB_OFF  &rgb_ug RGB_ON  &trans        &trans        &rgb_ug RGB_EFF  &kp C_MUTE                    &mmv MOVE_DOWN                   &rgb_ug RGB_EFR  &rgb_ug RGB_SPI  &rgb_ug RGB_BRI  &rgb_ug RGB_BRD  &trans  &trans
                                                 &trans        &trans        &trans                                                                          &kp INS          &kp DEL          &trans
            >;

            sensor-bindings = <&scroll_encoder>;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        Adjust {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };
};
